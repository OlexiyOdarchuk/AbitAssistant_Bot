# Copyright (c) 2025 iShawyha. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from app.services.parse_in_db import parser
import app.keyboards as kb
import app.services.applicants_len as applicantlen
from app.states import States as st
from config import user_score

router = Router()

@router.message(F.text == "üìù–ü–æ—á–∞—Ç–∏ –≤—ñ–¥—Å—ñ—é–≤–∞–Ω–Ω—è!üìù")
async def start_filter(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–Ω–∏–π –±–∞–ª –Ω–∞ –≤–∏–±—Ä–∞–Ω—É –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç—ñ '123.456'\n\
\n\n–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –º–æ–∂–Ω–∞ –Ω–∞ —Å–∞–π—Ç—ñ https://www.education.ua/vstup/weighting-coefficients/\
\n\n–ê –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–Ω–∏–π –±–∞–ª –Ω–∞ —Å–∞–π—Ç—ñ: https://osvita.ua/consultations/konkurs-ball/", reply_markup=kb.return_back)
    await state.set_state(st.get_bal)

@router.message(st.get_bal, F.text)
async def get_bal(message: Message, state: FSMContext):
    try:
        if 100.000 <= float(message.text) <= 200.000:
            user_score[message.from_user.id] = float(message.text)
            await state.set_state(st.get_link)
            await message.answer("–°—É–ø–µ—Ä! –¢–µ–ø–µ—Ä –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ—Å–≤—ñ—Ç–Ω—é –ø—Ä–æ–≥—Ä–∞–º—É –∑ —Å–∞–π—Ç—É vstup.osvita, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:\n'https://vstup.osvita.ua/y2024/r27/41/1352329/'")
        else:
            await message.answer('–í–∞—à –±–∞–ª –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤ –º–µ–∂–∞—Ö –≤—ñ–¥ 100 –¥–æ 200')
    except ValueError:
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤ –º–µ–∂–∞—Ö –≤—ñ–¥ 100 –¥–æ 200")

@router.message(st.get_link, F.text)
async def get_link(message: Message, state: FSMContext):
    try:
        if message.text.startswith('https://vstup.osvita.ua'): #–ù–ï –ó–ê–ë–£–î–¨ –°–Æ–î–ò –í–ü–ò–°–ê–¢–ò y2025!!!!
            await state.set_state(st.choice_list)
            await message.answer("–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –ø–æ—á–∞–ª–æ—Å—è.\n–¶–µ –∑–∞–π–º–µ –¥–æ 3 —Ö–≤–∏–ª–∏–Ω...\n\nP.S. –í—Å–µ –æ–¥–Ω–æ —à–≤–∏–¥—à–µ, –Ω—ñ–∂ –≤—Ä—É—á–Ω—ÉüòÑ", reply_markup=kb.remove_keyboard)
            await parser(message.text, message.from_user.id)
            await message.answer("–ì–æ—Ç–æ–≤–æ!", reply_markup=kb.return_back)
            how_all_applicant = await applicantlen.all_applicant_len(message.from_user.id)
            how_competitor_applicant = await applicantlen.competitors_applicant_len(message.from_user.id)
            await message.answer(f"–ù–∞ —Ü—é –æ—Å–≤—ñ—Ç–Ω—é –ø—Ä–æ–≥—Ä–∞–º—É –Ω–∞—Ä–∞–∑—ñ –∞–∫—Ç–∏–≤–Ω–æ {how_all_applicant} –±—é–¥–∂–µ—Ç–Ω–∏—Ö –∑–∞—è–≤–æ–∫, –∞–ª–µ –∑ —É—Å—ñ—Ö —Ü–∏—Ö –ª—é–¥–µ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü—ñ—é –≤–∞–º —Å–∫–ª–∞–¥–∞—é—Ç—å —Ç—ñ–ª—å–∫–∏ {how_competitor_applicant}\
\n–ú–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏—â–µ, –∞–±–æ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —ñ–Ω—à—ñ –æ—Å–≤—ñ—Ç–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏!", reply_markup=kb.applicant_stat)


        else:
            await message.answer("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 'https://vstup.osvita.ua/y2025/' —Ç–∞ –±—É—Ç–∏ –∫–æ—Ä–µ–∫—Ç–Ω–∏–º")
    except ValueError:
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ—Å–≤—ñ—Ç–Ω—é –ø—Ä–æ–≥—Ä–∞–º—É")
