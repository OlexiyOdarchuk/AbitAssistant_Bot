# Copyright (c) 2025 iShawyha. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import asyncio
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

import app.database.requests as rq
import app.keyboards as kb
from config import ADMIN_ID, bot
from app.services.logger import log_user_action, log_admin_action, log_error

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    try:
        if message.from_user.id in ADMIN_ID:
            log_admin_action(message.from_user.id, "Started bot")
            await rq.set_user(message.from_user.id)
            await message.answer(
                "–û, –∫—É! üëã\n–ù–∞ –º–µ–Ω—é—à–∫—É, –º–æ–∂–µ –≤–æ–Ω–∞ —Ç–æ–±—ñ —Ç—Ä–µ–±–∞ üòä",
                reply_markup=kb.admin_main,
            )
        else:
            log_user_action(
                message.from_user.id, message.from_user.username, "Started bot"
            )
            for admin in ADMIN_ID:
                await bot.send_message(
                    chat_id=admin,
                    text=f"–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {message.from_user.full_name}\nLink: tg://user?id={message.from_user.id}:",
                )

            await rq.set_user(message.from_user.id)
            await message.answer(
                """üëã –í—ñ—Ç–∞—é –≤ AbitAssistant_Bot!

–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞–º (—Ç–æ–±—Ç–æ –º–∞–π–±—É—Ç–Ω—ñ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º üòã) —à–≤–∏–¥–∫–æ —Ç–∞ –∑—Ä—É—á–Ω–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ —Å–≤–æ—ó—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤, —â–æ–± –Ω–µ –≤–∏—Ç—Ä–∞—á–∞—Ç–∏ —á–∞—Å –Ω–∞ —Ä—É—Ç–∏–Ω–Ω—É —Ä–æ–±–æ—Ç—É, —è–∫—É –ª–µ–≥–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑—É–≤–∞—Ç–∏.

üìå –ü—Ä–æ–≥—Ä–∞–º–∞ –±—É–¥–µ –æ—Å–æ–±–ª–∏–≤–æ –∫–æ—Ä–∏—Å–Ω–æ—é –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —Ç—ñ–ª—å–∫–∏ –ø–æ–¥–∞—î –∑–∞—è–≤–∫–∏ –¥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤!

P.S. –Ø–∫—â–æ —É –≤–∞—Å 200 —Ö–æ—á–∞ –± –∑ –æ–¥–Ω–æ–≥–æ, –∞–±–æ –∑ —É—Å—ñ—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –ù–ú–¢ ‚Äî –Ω–µ —Ö–≤–∏–ª—é–π—Ç–µ—Å—å. –î–ª—è –≤–∞—Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü—ñ—ó –ø—Ä–æ—Å—Ç–æ –Ω–µ —ñ—Å–Ω—É—î ü´£

üòâ –£—Å–ø—ñ—Ö—ñ–≤ –≤–∞–º —ñ –ª–µ–≥–∫–æ–≥–æ –≤—Å—Ç—É–ø—É! ‚úä"""
            )

            await message.answer(
                "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ üëá",
                reply_markup=kb.user_main,
            )
    except Exception as e:
        log_error(e, f"Error in start command for user {message.from_user.id}")


@router.message(F.text == "‚ùå –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
async def return_back(message: Message, state: FSMContext):
    try:
        if message.from_user.id in ADMIN_ID:
            await state.set_state(None)
            await message.answer(
                "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ üëá",
                reply_markup=kb.admin_main,
            )
        else:
            await state.set_state(None)
            await message.answer(
                "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ üëá",
                reply_markup=kb.user_main,
            )
    except Exception as e:
        log_error(e, f"Error in return_back for user {message.from_user.id}")


@router.message(F.text == "üí∏ –î–æ–Ω–∞—Ç üí∏")
async def donate(message: Message):
    try:
        await message.answer(
            """–°—é–¥–∏ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç–∏ –º–µ–Ω—ñ –Ω–∞ –Ω–æ–≤–∏–π –Ω–æ—É—Ç–±—É–∫ –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, –±—É–¥—É –¥—É–∂–µ –≤–¥—è—á–Ω–∏–π ü•∞

üéØ –¶—ñ–ª—å: 70 000 ‚Ç¥

üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É
https://send.monobank.ua/jar/23E3WYNesG

üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –±–∞–Ω–∫–∏
5375 4112 0596 9640
                                        """,
            reply_markup=kb.return_back,
        )
    except Exception as e:
        log_error(e, f"Error in donate command for user {message.from_user.id}")


@router.message(F.text == "üìë –ü—Ä–æ –Ω–∞—Å üìë")
async def about_us(message: Message):
    try:
        await message.answer(
            "–ó–∞—Ö–æ—Ç—ñ–ª–æ—Å—è –ø–æ—á–∏—Ç–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –ø—Ä–æ—î–∫—Ç—É? üòä", reply_markup=kb.remove_keyboard
        )
        await asyncio.sleep(2)
        await message.answer("–¢–æ–¥—ñ —Ç—Ä–∏–º–∞–π üòä")
        await message.answer(
            """üëã –í—ñ—Ç–∞—é! –Ø ‚Äî –ø–µ—Ä—à–æ–∫—É—Ä—Å–Ω–∏–∫ –§–∞—Ö–æ–≤–æ–≥–æ –∫–æ–ª–µ–¥–∂—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π –ù–£ "–õ—å–≤—ñ–≤—Å—å–∫–∞ –ü–æ–ª—ñ—Ç–µ—Ö–Ω—ñ–∫–∞".

–¶–µ–π –±–æ—Ç ‚Äî –º—ñ–π pet-project —ñ –≤–æ–¥–Ω–æ—á–∞—Å –∫–æ—Ä–∏—Å–Ω–∏–π –ø—Ä–æ—î–∫—Ç –¥–ª—è –±–∞–≥–∞—Ç—å–æ—Ö. –ù–µ —Å—É–¥—ñ—Ç—å —Å—É–≤–æ—Ä–æ ‚Äî —É—Å–µ –∑—Ä–æ–±–ª–µ–Ω–æ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ —Ç–∞ –∑ –¥—É—à–µ—é üòä

üéØ –ú–µ—Ç–∞ –ø—Ä–æ—î–∫—Ç—É:
    1. –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å–≤—ñ–¥ —É Python, –ø–∞—Ä—Å–∏–Ω–≥—É, —Ä–æ–±–æ—Ç—ñ –∑ –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö —Ç–∞ Telegram API.
    2. –î–æ–ø–æ–º–æ–≥—Ç–∏ –≤—Å—Ç—É–ø–Ω–∏–∫–∞–º —à–≤–∏–¥–∫–æ –π –∑—Ä—É—á–Ω–æ –ø–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑ –±—ñ–ª—å—à–∏–º–∏ —à–∞–Ω—Å–∞–º–∏ –Ω–∞ –±—é–¥–∂–µ—Ç, –±–µ–∑ –∑–∞–π–≤–æ—ó –º–µ—Ç—É—à–Ω—ñ —Ç–∞ —Ä—É—á–Ω–æ–≥–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è."""
        )

        await message.answer(
            """üìñ –¢—Ä—ñ—à–∫–∏ —ñ—Å—Ç–æ—Ä—ñ—ó:

–£—Å–µ –ø–æ—á–∞–ª–æ—Å—è —â–µ –≤ 2024 —Ä–æ—Ü—ñ, –∫–æ–ª–∏ —è –≤—Å—Ç—É–ø–∞–≤ —É –∫–æ–ª–µ–¥–∂, –∞ –º—ñ–π —Ç–æ–≤–∞—Ä–∏—à ‚Äî –≤ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç. –©–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ –π–æ–º—É –∑ –ø–æ–¥–∞—á–µ—é –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —è –Ω–∞–ø–∏—Å–∞–≤ —Å–∫—Ä–∏–ø—Ç –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤—ñ–¥–µ–æ TurboZNO, —è–∫–∏–π –ø—Ä–∞—Ü—é–≤–∞–≤ —ñ–∑ .txt-—Ñ–∞–π–ª–æ–º —ñ –≤ –∫–æ–Ω—Å–æ–ª—ñ.
–ü—ñ–∑–Ω—ñ—à–µ –º–∏ –∑—Ä–æ–±–∏–ª–∏ –≥—Ä–∞—Ñ—ñ—á–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–µ—Ä–µ–∑ Tkinter, –∞–ª–µ –ø—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–ª–∏—à–∞–ª–∞—Å—å –ª–æ–∫–∞–ª—å–Ω–æ—é: –ø–æ—Ç—Ä—ñ–±–µ–Ω –±—É–≤ –ü–ö, Python, —Ä—É—á–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–∞–π—Ç—É...

üí° –¢–∞–∫ –∑'—è–≤–∏–ª–∞—Å—å —ñ–¥–µ—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞.

üëÄ –í—ñ–¥–µ–æ, –Ω–∞ –æ—Å–Ω–æ–≤—ñ —è–∫–æ–≥–æ –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –±–æ—Ç:
https://www.youtube.com/watch?v=m5YfI8_2ONo

üë®‚Äçüíª –°—Ç–∞—Ä–∞ –≤–µ—Ä—Å—ñ—è –∑ Tkinter:
https://github.com/OlexiyOdarchuk/Competition-Check"""
        )

        await message.answer(
            """ü§ñ Telegram-–≤–µ—Ä—Å—ñ—è ‚Äî –∑—Ä—É—á–Ω—ñ—à–∞ —Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–∂–Ω–æ–º—É:

üîß –ë–æ—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î:
    - –ë—Ä–∞—É–∑–µ—Ä–Ω—ñ –¥—Ä–∞–π–≤–µ—Ä–∏ (Selenium),
    - –ë–∞–∑–∏ –¥–∞–Ω–∏—Ö PostgreSQL,
    - –ü–∞—Ä—Å–µ—Ä–∏ —Ç–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∫–æ–¥.

üßë‚Äçüíª –í–µ—Å—å –∫–æ–¥ ‚Äî —É –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –¥–æ—Å—Ç—É–ø—ñ, –ø—ñ–¥ –ª—ñ—Ü–µ–Ω–∑—ñ—î—é GPLv3:
https://github.com/OlexiyOdarchuk/AbitAssistant_bot"""
        )

        await message.answer(
            """üôè –Ø–∫—â–æ –≤–∞–º —Å–ø–æ–¥–æ–±–∞–ª–∞—Å—å —ñ–¥–µ—è –∞–±–æ –±–æ—Ç –±—É–≤ –∫–æ—Ä–∏—Å–Ω–∏–º, –ø—ñ–¥—Ç—Ä–∏–º–∞–π—Ç–µ –ø—Ä–æ—î–∫—Ç –¥–æ–Ω–∞—Ç–æ–º ‚Äî –Ω–∞–≤—ñ—Ç—å –∫—ñ–ª—å–∫–∞ –≥—Ä–∏–≤–µ–Ω—å –≤–∞–∂–ª–∏–≤—ñ –¥–ª—è –ø–æ–∫—Ä–∏—Ç—Ç—è –≤–∏—Ç—Ä–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∏.

üõ† –ê —â–µ ‚Äî –¥–æ–ª—É—á–∞–π—Ç–µ—Å—å –¥–æ —Ä–æ–∑—Ä–æ–±–∫–∏ –∞–±–æ –ª–∏—à–∞–π—Ç–µ —Å–≤–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –Ω–∞ GitHub —Ç–∞ –≤ '–ó–≤'—è–∑–æ–∫ –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é' üë®‚Äçüíª""",
            reply_markup=kb.about_us,
        )
    except Exception as e:
        log_error(e, f"Error in about_us command for user {message.from_user.id}")
