import asyncio
import time

from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from config import ADMIN_ID, bot
import app.database.requests as rq
from app.services.parser import parser
from app.services.generate_link import generate_link
import app.keyboards as kb
from app.states import States as st

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer(
            "–û, –∫—É!\n–ù–∞ –º–µ–Ω—é—à–∫—É, –º–æ–∂–µ –≤–æ–Ω–∞ —Ç–æ–±—ñ —Ç—Ä–µ–±–∞)", reply_markup=kb.admin_main
        )
    else:
        await rq.set_user(message.from_user.id)
        await message.answer("""–í—ñ—Ç–∞—é –≤ –±–æ—Ç—ñ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ–Ω–∫—É—Ä–µ–∫—Ü—ñ—ó! üëã
                                 
–¢—É—Ç –º–∏ —Ä–µ–∞–ª—ñ–∑—É–≤–∞–ª–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç—ñ–≤(—Ç–æ–±—Ç–æ –º–∞–π–±—É–Ω—ñ—Ö —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤üòã),
—â–æ–± –≤–∏ –Ω–µ –≤–∏—Ç—Ä–∞—á–∞–ª–∏ —Å–≤—ñ–π –¥–æ—Ä–æ–≥–æ—Ü—ñ–Ω–Ω–∏–π —á–∞—Å –Ω–∞ –æ–¥–Ω–æ—Ç–∏–ø–Ω—É —Ä–æ–±–æ—Ç—É, —è–∫–∞, —è–∫ –ø—Ä–∞–≤–∏–ª–æ, –¥–æ–±—Ä–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑—É—î—Ç—å—Å—è!
–¶—è –ø—Ä–æ–≥—Ä–∞–º–∞ –±—É–¥–µ –∫–æ—Ä–∏—Å–Ω–∞ –¥–ª—è —Ç–∏—Ö,
—Ö—Ç–æ —Ç—ñ–ª—å–∫–∏ –ø–æ–¥–∞—î –∑–∞—è–≤–∫–∏ –¥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤!

P.s. –¢–∞ –º–∞—î –Ω–µ 200 –∑ —É—Å—ñ—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –ù–ú–¢..
–î–ª—è –≤–∞—Å –≤–∑–∞–≥–∞–ª—ñ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü—ñ—ó –Ω–µ —ñ—Å–Ω—É—îü´£
                                
                                üòâ–£—Å–ø—ñ—Ö—ñ–≤!‚úä
                                """)
        await message.answer(
            "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µüëá",
            reply_markup=kb.user_main,
        )


@router.message(F.text == "‚ùå –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
async def return_back(message: Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer(
            "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µüëá",
            reply_markup=kb.admin_main,
        )
    else:
        await message.answer(
            "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µüëá",
            reply_markup=kb.user_main,
        )


@router.message(F.text == "üí∏–î–æ–Ω–∞—Çüí∏")
async def donate(message: Message):
    await message.answer(
        """–°—é–¥–∏ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç–∏ –º–µ–Ω—ñ –Ω–∞ –Ω–æ–≤–∏–π –Ω–æ—É—Ç–±—É–∫ –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, –±—É–¥—É –¥—É–∂–µ –≤–¥—è—á–Ω–∏–π ü•∞

üéØ –¶—ñ–ª—å:¬†70¬†000¬†‚Ç¥

üîó–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É
https://send.monobank.ua/jar/23E3WYNesG

üí≥–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –±–∞–Ω–∫–∏
5375¬†4112¬†0596¬†9640
                        """,
        reply_markup=kb.return_back,
    )


@router.message(F.text == "üìë–ü—Ä–æ –Ω–∞—Åüìë")
async def about_us(message: Message):
    await message.answer(
        "–•—Ç–æ—Å—å –≤–∑–∞–≥–∞–ª—ñ –Ω–∞—Ç–∏—Å–∫–∞—î –Ω–∞ —Ü—é –∫–Ω–æ–ø–∫—É?...", reply_markup=kb.remove_keyboard
    )
    await asyncio.sleep(2)
    await message.answer("–ù—É —Ä–∞–∑ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏, –∑–Ω–∞—á–∏—Ç—å —Ü—ñ–∫–∞–≤–æ)))")
    await asyncio.sleep(1)
    await message.answer(
        "–¢—É—Ç —Ç—ñ–ø–∞ —à–æ—Å—å –Ω–∞–ø–∏—Å–∞–≤ —â–æ—Å—å –¥—É–∂–µ –≤–∞–∂–Ω–µ –ø—Ä—è–º –æ–≥–æ–≥–æ —Ç—É—Ç —è –¥–æ–ø–∏—à—É –∫–æ–ª–∏-–Ω–µ–±—É–¥—å —à–æ—Å—å –ø—Ä–æ —Å–µ–±–µ —ñ –≤–∑–∞–≥–∞–ª—ñ —Ü—é –ø—Ä–æ–≥—Ä–∞–º—É, –±–æ —â–∞—Å –ª—î–Ω—å –ø—Ä–∏–¥—É–º—É–≤–∞—Ç–∏.\
\n–í–∑–∞–≥–∞–ª—ñ —è –±—ñ–¥–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç, —Ç–∞–∫ —â–æ –¥–∞–≤–∞–π—Ç–µ —è–∫–æ—Å—å –∑–∞–¥–æ–Ω–∞—Ç—å—Ç–µ, —á–∏ —â–æ ",
        reply_markup=kb.about_us,
    )


@router.message(F.text == "üì£–†–æ–∑—Å–∏–ª–∫–∞!")
async def mailing(message: Message, state: FSMContext):
    if message.from_user.id == ADMIN_ID:
        await message.answer(
            "üì£ –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏: üì£", reply_markup=kb.return_back
        )
        await state.set_state(st.get_mailing)
    else:
        await message.answer(
            "–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏, –≤–∏ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç–µ—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é."
        )
        await message.answer(
            "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é.\n–î–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó –ø–æ –±–æ—Ç—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µüëá",
            reply_markup=kb.user_main,
        )


@router.message(st.get_mailing, F.text)
async def get_text(message: Message, state: FSMContext):
    await state.update_data(mailing_text=message.md_text)
    await message.answer("–¢–µ–∫—Å—Ç –ø—Ä–∏–π–Ω—è—Ç–æ, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∏–≥–ª—è–¥–∞—î –æ—Å—å —Ç–∞–∫:")
    data = await state.get_data()
    mailing_text = data.get("mailing_text", "–¢–µ–∫—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!!!")
    await message.answer(
        f"üì£–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Å–∏–ª–∫–∏: \n\n{mailing_text}", reply_markup=kb.mailing
    )
    await state.set_state(st.init_mailing)


@router.message(st.init_mailing, F.text == "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—Éüì£")
async def init(message: Message, state: FSMContext):
    data = await state.get_data()
    mailing_text = data.get("mailing_text", "–¢–µ–∫—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!!!")
    users = await rq.get_users()
    start_time = time.time()
    sent_count = 0
    for user in users:
        try:
            await bot.send_message(
                chat_id=user, text=f"üì£–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Å–∏–ª–∫–∏: \n\n{mailing_text}"
            )
            sent_count += 1
            await asyncio.sleep(0.1)
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user}: {e}")

    elapsed_time = round(time.time() - start_time, 2)

    await bot.send_message(
        chat_id=ADMIN_ID,
        text=f"–†–æ–∑—Å–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! \n–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑–∞ {elapsed_time} —Å–µ–∫—É–Ω–¥.",
        reply_markup=kb.admin_main,
    )
